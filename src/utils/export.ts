import { AnalysisResult } from '@/services/qwenVL';

export function downloadJSON(data: any, filename: string) {
  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}

export function downloadText(content: string, filename: string) {
  const blob = new Blob([content], { type: 'text/plain' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}

export function formatAnalysisReport(
  location: string,
  buildingType: string,
  analysisResult: AnalysisResult
): string {
  const date = new Date().toLocaleString();
  
  let report = `PlotPal AI - Vacant Space Analysis Report
================================================

Location: ${location}
Building Type: ${buildingType}
Analysis Date: ${date}
Confidence: ${analysisResult.confidence}%

OVERALL ANALYSIS
================
${analysisResult.analysis}

RECOMMENDED VACANT SPACES
=========================

`;

  analysisResult.vacantSpaces.forEach((space, index) => {
    report += `${index + 1}. ${space.location}
   Suitability Score: ${space.suitability}%
   Coordinates: ${space.coordinates.lat.toFixed(6)}, ${space.coordinates.lng.toFixed(6)}
   
   Description:
   ${space.description}
   
   Advantages:
${space.reasons.map(r => `   • ${r}`).join('\n')}
   
   Considerations:
${space.considerations.map(c => `   • ${c}`).join('\n')}
   
---------------------------------------------------

`;
  });

  report += `
Generated by PlotPal AI - Open Source Urban Planning Tool
Using OpenStreetMap & Qwen-VL
`;

  return report;
}

export function exportAnalysisAsJSON(
  location: string,
  buildingType: string,
  analysisResult: AnalysisResult
) {
  const data = {
    metadata: {
      tool: 'PlotPal AI',
      location,
      buildingType,
      analysisDate: new Date().toISOString(),
      confidence: analysisResult.confidence,
    },
    analysis: analysisResult.analysis,
    vacantSpaces: analysisResult.vacantSpaces,
  };

  const filename = `plotpal-${location.replace(/\s+/g, '-')}-${buildingType}-${Date.now()}.json`;
  downloadJSON(data, filename);
}

export function exportAnalysisAsText(
  location: string,
  buildingType: string,
  analysisResult: AnalysisResult
) {
  const report = formatAnalysisReport(location, buildingType, analysisResult);
  const filename = `plotpal-${location.replace(/\s+/g, '-')}-${buildingType}-${Date.now()}.txt`;
  downloadText(report, filename);
}
